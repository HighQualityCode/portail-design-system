{
  "properties": [
    {
      "name": "target",
      "type": "null",
      "description": "DOM element or CSS selector string. Element, next to which, a dropdown should be opened (usually the element that triggers open)"
    },
    {
      "name": "position",
      "type": "String",
      "default": "bottom-right",
      "description": "String. Where dropdown should be placed relatively to the target. Formated as 'primaryAlignment-secondaryAlignment'."
    },
    {
      "name": "opened",
      "type": "Boolean",
      "description": "Boolean. Is dropdown shown. Supports .sync modifier that lets the component close itself (when user clicks outside)"
    },
    {
      "name": "just-fade-in",
      "type": "Boolean",
      "description": "Change the enter animation to just fade in"
    },
    {
      "name": "just-fade-out",
      "type": "Boolean",
      "description": "Change the leave animation to just fade out"
    },
    {
      "name": "just-fade",
      "type": "Boolean",
      "default": "true",
      "description": "Change both"
    },
    {
      "name": "borderColor",
      "type": "String",
      "description": "Set up border color for dropdown content"
    },
    {
      "name": "mouseoutClose",
      "type": "Boolean",
      "default": "false",
      "description": "Allow to close dropdown on mouseout event"
    },
    {
      "name": "labelId",
      "type": "String",
      "description": "Label identification of input component with dropdown component"
    },
    {
      "name": "activeDatepickerComponent",
      "type": "String",
      "description": "Provide active datepicker component, if dropdown component is part of it ecosystem"
    },
    {
      "name": "transitionTime",
      "type": "Number",
      "default": "300",
      "description": "Setup transition time"
    },
    {
      "name": "margin",
      "type": "Number",
      "default": "4",
      "description": "Set margin in px"
    },
    {
      "name": "leftOffset",
      "type": "Number",
      "default": "0",
      "description": "Left offset of component in px from pre-rendered position that depend on 'position' props"
    },
    {
      "name": "topOffset",
      "type": "Number",
      "default": "0",
      "description": "Top offset of component in px from pre-rendered position that depend on 'position' props"
    }
  ],
  "events": []
}
